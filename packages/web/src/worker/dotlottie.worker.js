/**
 * This is a worker script for dotlottie.
 * Do not modify this file directly.
 * As it's generated by the build process.
 */

var Tn = Object.defineProperty;
var Sn = (s, n, a) => (n in s ? Tn(s, n, { enumerable: !0, configurable: !0, writable: !0, value: a }) : (s[n] = a));
var I = (s, n, a) => Sn(s, typeof n != 'symbol' ? n + '' : n, a);
var Xe = class {
    requestAnimationFrame(n) {
      return requestAnimationFrame(n);
    }
    cancelAnimationFrame(n) {
      cancelAnimationFrame(n);
    }
  },
  Ze = class {
    constructor() {
      I(this, '_lastHandleId', 0);
      I(this, '_lastImmediate', null);
    }
    requestAnimationFrame(n) {
      return (
        this._lastHandleId >= Number.MAX_SAFE_INTEGER && (this._lastHandleId = 0),
        (this._lastHandleId += 1),
        (this._lastImmediate = setImmediate(() => {
          n(Date.now());
        })),
        this._lastHandleId
      );
    }
    cancelAnimationFrame(n) {
      this._lastImmediate && clearImmediate(this._lastImmediate);
    }
  },
  Ie = class {
    constructor() {
      I(this, '_strategy');
      this._strategy = typeof requestAnimationFrame == 'function' ? new Xe() : new Ze();
    }
    requestAnimationFrame(n) {
      return this._strategy.requestAnimationFrame(n);
    }
    cancelAnimationFrame(n) {
      this._strategy.cancelAnimationFrame(n);
    }
  };
var te = typeof window < 'u' && typeof window.document < 'u';
var xe = new Uint8Array([80, 75, 3, 4]);
var me = {
  name: '@lottiefiles/dotlottie-web',
  version: '0.29.1',
  type: 'module',
  description: 'Lottie and DotLottie player for the web',
  repository: { type: 'git', url: 'git+https://github.com/LottieFiles/dotlottie-web.git', directory: 'packages/web' },
  homepage: 'https://github.com/LottieFiles/dotlottie-web#readme',
  bugs: 'https://github.com/LottieFiles/dotlottie-web/issues',
  author: 'LottieFiles',
  contributors: ['Abdelrahman Ashraf <a.theashraf@gmail.com>'],
  license: 'MIT',
  main: 'dist/index.cjs',
  module: 'dist/index.js',
  types: 'dist/index.d.ts',
  files: ['dist'],
  keywords: ['dotlottie', 'lottie', 'player', 'animation', 'web', 'canvas', 'javascript', 'thorvg'],
  scripts: {
    build: 'tsup',
    dev: 'tsup --watch',
    lint: 'eslint --fix .',
    'stats:eslint': 'cross-env TIMING=1 eslint .',
    'stats:ts': 'tsc -p tsconfig.build.json --extendedDiagnostics',
    test: 'vitest run --browser.headless',
    'test:coverage': 'vitest run --browser.headless --coverage',
    'test:watch': 'vitest',
    'type-check': 'tsc --noEmit',
  },
  devDependencies: {
    '@types/node': '^20.14.11',
    '@vitest/browser': '^2.0.3',
    '@vitest/coverage-istanbul': '^2.0.3',
    'cross-env': '7.0.3',
    playwright: '^1.45.2',
    tsup: '8.1.0',
    typescript: '5.0.4',
    vitest: '^2.0.3',
  },
  publishConfig: { access: 'public' },
};
var $n = (() => {
    var s = typeof document < 'u' ? document.currentScript?.src : void 0;
    return function (n = {}) {
      var a = n,
        d,
        w,
        $ = new Promise((e, t) => {
          (d = e), (w = t);
        }),
        U = Object.assign({}, a),
        Y = './this.program',
        W = '';
      typeof document < 'u' && document.currentScript && (W = document.currentScript.src),
        s && (W = s),
        W.startsWith('blob:') ? (W = '') : (W = W.substr(0, W.replace(/[?#].*/, '').lastIndexOf('/') + 1));
      var jt = a.print || console.log.bind(console),
        Z = a.printErr || console.error.bind(console);
      Object.assign(a, U), (U = null), a.thisProgram && (Y = a.thisProgram);
      var ne;
      a.wasmBinary && (ne = a.wasmBinary);
      var ve,
        nt = !1,
        G,
        b,
        Q,
        re,
        A,
        L,
        rt,
        at;
      function ot() {
        var e = ve.buffer;
        (a.HEAP8 = G = new Int8Array(e)),
          (a.HEAP16 = Q = new Int16Array(e)),
          (a.HEAPU8 = b = new Uint8Array(e)),
          (a.HEAPU16 = re = new Uint16Array(e)),
          (a.HEAP32 = A = new Int32Array(e)),
          (a.HEAPU32 = L = new Uint32Array(e)),
          (a.HEAPF32 = rt = new Float32Array(e)),
          (a.HEAPF64 = at = new Float64Array(e));
      }
      var it = [],
        st = [],
        lt = [];
      function Ut() {
        var e = a.preRun.shift();
        it.unshift(e);
      }
      var N = 0,
        ae = null;
      function ye(e) {
        throw (
          (a.onAbort?.(e),
          (e = 'Aborted(' + e + ')'),
          Z(e),
          (nt = !0),
          (e = new WebAssembly.RuntimeError(e + '. Build with -sASSERTIONS for more info.')),
          w(e),
          e)
        );
      }
      var dt = (e) => e.startsWith('data:application/octet-stream;base64,'),
        q;
      if (((q = 'DotLottiePlayer.wasm'), !dt(q))) {
        var ut = q;
        q = a.locateFile ? a.locateFile(ut, W) : W + ut;
      }
      function ct(e) {
        if (e == q && ne) return new Uint8Array(ne);
        throw 'both async and sync fetching of the wasm failed';
      }
      function Ht(e) {
        return ne || typeof fetch != 'function'
          ? Promise.resolve().then(() => ct(e))
          : fetch(e, { credentials: 'same-origin' })
              .then((t) => {
                if (!t.ok) throw `failed to load wasm binary file at '${e}'`;
                return t.arrayBuffer();
              })
              .catch(() => ct(e));
      }
      function ht(e, t, r) {
        return Ht(e)
          .then((o) => WebAssembly.instantiate(o, t))
          .then(r, (o) => {
            Z(`failed to asynchronously prepare wasm: ${o}`), ye(o);
          });
      }
      function Vt(e, t) {
        var r = q;
        return ne || typeof WebAssembly.instantiateStreaming != 'function' || dt(r) || typeof fetch != 'function'
          ? ht(r, e, t)
          : fetch(r, { credentials: 'same-origin' }).then((o) =>
              WebAssembly.instantiateStreaming(o, e).then(t, function (i) {
                return (
                  Z(`wasm streaming compile failed: ${i}`), Z('falling back to ArrayBuffer instantiation'), ht(r, e, t)
                );
              }),
            );
      }
      var Te = (e) => {
          for (; 0 < e.length; ) e.shift()(a);
        },
        pt = typeof TextDecoder < 'u' ? new TextDecoder('utf8') : void 0,
        J = (e, t, r) => {
          var o = t + r;
          for (r = t; e[r] && !(r >= o); ) ++r;
          if (16 < r - t && e.buffer && pt) return pt.decode(e.subarray(t, r));
          for (o = ''; t < r; ) {
            var i = e[t++];
            if (i & 128) {
              var l = e[t++] & 63;
              if ((i & 224) == 192) o += String.fromCharCode(((i & 31) << 6) | l);
              else {
                var h = e[t++] & 63;
                (i =
                  (i & 240) == 224
                    ? ((i & 15) << 12) | (l << 6) | h
                    : ((i & 7) << 18) | (l << 12) | (h << 6) | (e[t++] & 63)),
                  65536 > i
                    ? (o += String.fromCharCode(i))
                    : ((i -= 65536), (o += String.fromCharCode(55296 | (i >> 10), 56320 | (i & 1023))));
              }
            } else o += String.fromCharCode(i);
          }
          return o;
        };
      class Yt {
        constructor(t) {
          this.ya = t - 24;
        }
      }
      var mt = 0,
        ft = (e) => {
          for (var t = 0, r = 0; r < e.length; ++r) {
            var o = e.charCodeAt(r);
            127 >= o ? t++ : 2047 >= o ? (t += 2) : 55296 <= o && 57343 >= o ? ((t += 4), ++r) : (t += 3);
          }
          return t;
        },
        vt = (e, t, r, o) => {
          if (0 < o) {
            o = r + o - 1;
            for (var i = 0; i < e.length; ++i) {
              var l = e.charCodeAt(i);
              if (55296 <= l && 57343 >= l) {
                var h = e.charCodeAt(++i);
                l = (65536 + ((l & 1023) << 10)) | (h & 1023);
              }
              if (127 >= l) {
                if (r >= o) break;
                t[r++] = l;
              } else {
                if (2047 >= l) {
                  if (r + 1 >= o) break;
                  t[r++] = 192 | (l >> 6);
                } else {
                  if (65535 >= l) {
                    if (r + 2 >= o) break;
                    t[r++] = 224 | (l >> 12);
                  } else {
                    if (r + 3 >= o) break;
                    (t[r++] = 240 | (l >> 18)), (t[r++] = 128 | ((l >> 12) & 63));
                  }
                  t[r++] = 128 | ((l >> 6) & 63);
                }
                t[r++] = 128 | (l & 63);
              }
            }
            t[r] = 0;
          }
        },
        ge = {},
        Se = (e) => {
          for (; e.length; ) {
            var t = e.pop();
            e.pop()(t);
          }
        };
      function oe(e) {
        return this.fromWireType(L[e >> 2]);
      }
      var ee = {},
        K = {},
        we = {},
        ie,
        H = (e, t, r) => {
          function o(c) {
            if (((c = r(c)), c.length !== e.length)) throw new ie('Mismatched type converter count');
            for (var m = 0; m < e.length; ++m) k(e[m], c[m]);
          }
          e.forEach(function (c) {
            we[c] = t;
          });
          var i = Array(t.length),
            l = [],
            h = 0;
          t.forEach((c, m) => {
            K.hasOwnProperty(c)
              ? (i[m] = K[c])
              : (l.push(c),
                ee.hasOwnProperty(c) || (ee[c] = []),
                ee[c].push(() => {
                  (i[m] = K[c]), ++h, h === l.length && o(i);
                }));
          }),
            l.length === 0 && o(i);
        },
        yt,
        P = (e) => {
          for (var t = ''; b[e]; ) t += yt[b[e++]];
          return t;
        },
        g;
      function Nt(e, t, r = {}) {
        var o = t.name;
        if (!e) throw new g(`type "${o}" must have a positive integer typeid pointer`);
        if (K.hasOwnProperty(e)) {
          if (r.ib) return;
          throw new g(`Cannot register type '${o}' twice`);
        }
        (K[e] = t), delete we[e], ee.hasOwnProperty(e) && ((t = ee[e]), delete ee[e], t.forEach((i) => i()));
      }
      function k(e, t, r = {}) {
        if (!('argPackAdvance' in t)) throw new TypeError('registerType registeredInstance requires argPackAdvance');
        return Nt(e, t, r);
      }
      var Re = (e) => {
          throw new g(e.ma.za.xa.name + ' instance already deleted');
        },
        $e = !1,
        gt = () => {},
        wt = (e, t, r) => (t === r ? e : r.Ca === void 0 ? null : ((e = wt(e, t, r.Ca)), e === null ? null : r.ab(e))),
        _t = {},
        se = [],
        ke = () => {
          for (; se.length; ) {
            var e = se.pop();
            (e.ma.Ka = !1), e.delete();
          }
        },
        le,
        de = {},
        Jt = (e, t) => {
          if (t === void 0) throw new g('ptr should not be undefined');
          for (; e.Ca; ) (t = e.Na(t)), (e = e.Ca);
          return de[t];
        },
        _e = (e, t) => {
          if (!t.za || !t.ya) throw new ie('makeClassHandle requires ptr and ptrType');
          if (!!t.Da != !!t.Aa) throw new ie('Both smartPtrType and smartPtr must be specified');
          return (t.count = { value: 1 }), ue(Object.create(e, { ma: { value: t, writable: !0 } }));
        },
        ue = (e) =>
          typeof FinalizationRegistry > 'u'
            ? ((ue = (t) => t), e)
            : (($e = new FinalizationRegistry((t) => {
                (t = t.ma), --t.count.value, t.count.value === 0 && (t.Aa ? t.Da.Fa(t.Aa) : t.za.xa.Fa(t.ya));
              })),
              (ue = (t) => {
                var r = t.ma;
                return r.Aa && $e.register(t, { ma: r }, t), t;
              }),
              (gt = (t) => {
                $e.unregister(t);
              }),
              ue(e));
      function Ee() {}
      var ce = (e, t) => Object.defineProperty(t, 'name', { value: e }),
        Et = (e, t, r) => {
          if (e[t].Ba === void 0) {
            var o = e[t];
            (e[t] = function (...i) {
              if (!e[t].Ba.hasOwnProperty(i.length))
                throw new g(
                  `Function '${r}' called with an invalid number of arguments (${i.length}) - expects one of (${e[t].Ba})!`,
                );
              return e[t].Ba[i.length].apply(this, i);
            }),
              (e[t].Ba = []),
              (e[t].Ba[o.Oa] = o);
          }
        },
        De = (e, t, r) => {
          if (a.hasOwnProperty(e)) {
            if (r === void 0 || (a[e].Ba !== void 0 && a[e].Ba[r] !== void 0))
              throw new g(`Cannot register public name '${e}' twice`);
            if ((Et(a, e, e), a.hasOwnProperty(r)))
              throw new g(`Cannot register multiple overloads of a function with the same number of arguments (${r})!`);
            a[e].Ba[r] = t;
          } else (a[e] = t), r !== void 0 && (a[e].vb = r);
        },
        Kt = (e) => {
          if (e === void 0) return '_unknown';
          e = e.replace(/[^a-zA-Z0-9_]/g, '$');
          var t = e.charCodeAt(0);
          return 48 <= t && 57 >= t ? `_${e}` : e;
        };
      function Xt(e, t, r, o, i, l, h, c) {
        (this.name = e),
          (this.constructor = t),
          (this.La = r),
          (this.Fa = o),
          (this.Ca = i),
          (this.cb = l),
          (this.Na = h),
          (this.ab = c),
          (this.kb = []);
      }
      var ze = (e, t, r) => {
        for (; t !== r; ) {
          if (!t.Na) throw new g(`Expected null or instance of ${r.name}, got an instance of ${t.name}`);
          (e = t.Na(e)), (t = t.Ca);
        }
        return e;
      };
      function Zt(e, t) {
        if (t === null) {
          if (this.Ta) throw new g(`null is not a valid ${this.name}`);
          return 0;
        }
        if (!t.ma) throw new g(`Cannot pass "${Ve(t)}" as a ${this.name}`);
        if (!t.ma.ya) throw new g(`Cannot pass deleted object as a pointer of type ${this.name}`);
        return ze(t.ma.ya, t.ma.za.xa, this.xa);
      }
      function Qt(e, t) {
        if (t === null) {
          if (this.Ta) throw new g(`null is not a valid ${this.name}`);
          if (this.Qa) {
            var r = this.Ua();
            return e !== null && e.push(this.Fa, r), r;
          }
          return 0;
        }
        if (!t || !t.ma) throw new g(`Cannot pass "${Ve(t)}" as a ${this.name}`);
        if (!t.ma.ya) throw new g(`Cannot pass deleted object as a pointer of type ${this.name}`);
        if (!this.Pa && t.ma.za.Pa)
          throw new g(
            `Cannot convert argument of type ${t.ma.Da ? t.ma.Da.name : t.ma.za.name} to parameter type ${this.name}`,
          );
        if (((r = ze(t.ma.ya, t.ma.za.xa, this.xa)), this.Qa)) {
          if (t.ma.Aa === void 0) throw new g('Passing raw pointer to smart pointer is illegal');
          switch (this.pb) {
            case 0:
              if (t.ma.Da === this) r = t.ma.Aa;
              else
                throw new g(
                  `Cannot convert argument of type ${t.ma.Da ? t.ma.Da.name : t.ma.za.name} to parameter type ${
                    this.name
                  }`,
                );
              break;
            case 1:
              r = t.ma.Aa;
              break;
            case 2:
              if (t.ma.Da === this) r = t.ma.Aa;
              else {
                var o = t.clone();
                (r = this.lb(
                  r,
                  Me(() => o.delete()),
                )),
                  e !== null && e.push(this.Fa, r);
              }
              break;
            default:
              throw new g('Unsupporting sharing policy');
          }
        }
        return r;
      }
      function qt(e, t) {
        if (t === null) {
          if (this.Ta) throw new g(`null is not a valid ${this.name}`);
          return 0;
        }
        if (!t.ma) throw new g(`Cannot pass "${Ve(t)}" as a ${this.name}`);
        if (!t.ma.ya) throw new g(`Cannot pass deleted object as a pointer of type ${this.name}`);
        if (t.ma.za.Pa) throw new g(`Cannot convert argument of type ${t.ma.za.name} to parameter type ${this.name}`);
        return ze(t.ma.ya, t.ma.za.xa, this.xa);
      }
      function he(e, t, r, o, i, l, h, c, m, p, f) {
        (this.name = e),
          (this.xa = t),
          (this.Ta = r),
          (this.Pa = o),
          (this.Qa = i),
          (this.jb = l),
          (this.pb = h),
          (this.Za = c),
          (this.Ua = m),
          (this.lb = p),
          (this.Fa = f),
          i || t.Ca !== void 0 ? (this.toWireType = Qt) : ((this.toWireType = o ? Zt : qt), (this.Ea = null));
      }
      var Ct = (e, t, r) => {
          if (!a.hasOwnProperty(e)) throw new ie('Replacing nonexistent public symbol');
          a[e].Ba !== void 0 && r !== void 0 ? (a[e].Ba[r] = t) : ((a[e] = t), (a[e].Oa = r));
        },
        R,
        en = (e, t, r = []) => (
          e.includes('j') ? ((e = e.replace(/p/g, 'i')), (t = (0, a['dynCall_' + e])(t, ...r))) : (t = R.get(t)(...r)),
          t
        ),
        tn =
          (e, t) =>
          (...r) =>
            en(e, t, r),
        T = (e, t) => {
          e = P(e);
          var r = e.includes('j') ? tn(e, t) : R.get(t);
          if (typeof r != 'function') throw new g(`unknown function pointer with signature ${e}: ${t}`);
          return r;
        },
        Mt,
        Lt = (e) => {
          e = Rt(e);
          var t = P(e);
          return j(e), t;
        },
        Ce = (e, t) => {
          function r(l) {
            i[l] || K[l] || (we[l] ? we[l].forEach(r) : (o.push(l), (i[l] = !0)));
          }
          var o = [],
            i = {};
          throw (t.forEach(r), new Mt(`${e}: ` + o.map(Lt).join([', '])));
        },
        Oe = (e, t) => {
          for (var r = [], o = 0; o < e; o++) r.push(L[(t + 4 * o) >> 2]);
          return r;
        };
      function nn(e) {
        for (var t = 1; t < e.length; ++t) if (e[t] !== null && e[t].Ea === void 0) return !0;
        return !1;
      }
      function We(e, t, r, o, i) {
        var l = t.length;
        if (2 > l) throw new g("argTypes array size mismatch! Must at least get return value and 'this' types!");
        var h = t[1] !== null && r !== null,
          c = nn(t),
          m = t[0].name !== 'void',
          p = l - 2,
          f = Array(p),
          _ = [],
          C = [];
        return ce(e, function (...u) {
          if (u.length !== p) throw new g(`function ${e} called with ${u.length} arguments, expected ${p}`);
          if (((C.length = 0), (_.length = h ? 2 : 1), (_[0] = i), h)) {
            var v = t[1].toWireType(C, this);
            _[1] = v;
          }
          for (var y = 0; y < p; ++y) (f[y] = t[y + 2].toWireType(C, u[y])), _.push(f[y]);
          if (((u = o(..._)), c)) Se(C);
          else
            for (y = h ? 1 : 2; y < t.length; y++) {
              var x = y === 1 ? v : f[y - 2];
              t[y].Ea !== null && t[y].Ea(x);
            }
          return (v = m ? t[0].fromWireType(u) : void 0), v;
        });
      }
      var bt = (e) => {
          e = e.trim();
          let t = e.indexOf('(');
          return t !== -1 ? e.substr(0, t) : e;
        },
        Be = [],
        B = [],
        je = (e) => {
          9 < e && --B[e + 1] === 0 && ((B[e] = void 0), Be.push(e));
        },
        Ue = (e) => {
          if (!e) throw new g('Cannot use deleted val. handle = ' + e);
          return B[e];
        },
        Me = (e) => {
          switch (e) {
            case void 0:
              return 2;
            case null:
              return 4;
            case !0:
              return 6;
            case !1:
              return 8;
            default:
              let t = Be.pop() || B.length;
              return (B[t] = e), (B[t + 1] = 1), t;
          }
        },
        Ft = {
          name: 'emscripten::val',
          fromWireType: (e) => {
            var t = Ue(e);
            return je(e), t;
          },
          toWireType: (e, t) => Me(t),
          argPackAdvance: 8,
          readValueFromPointer: oe,
          Ea: null,
        },
        rn = (e, t, r) => {
          switch (t) {
            case 1:
              return r
                ? function (o) {
                    return this.fromWireType(G[o]);
                  }
                : function (o) {
                    return this.fromWireType(b[o]);
                  };
            case 2:
              return r
                ? function (o) {
                    return this.fromWireType(Q[o >> 1]);
                  }
                : function (o) {
                    return this.fromWireType(re[o >> 1]);
                  };
            case 4:
              return r
                ? function (o) {
                    return this.fromWireType(A[o >> 2]);
                  }
                : function (o) {
                    return this.fromWireType(L[o >> 2]);
                  };
            default:
              throw new TypeError(`invalid integer width (${t}): ${e}`);
          }
        },
        He = (e, t) => {
          var r = K[e];
          if (r === void 0) throw ((e = `${t} has unknown type ${Lt(e)}`), new g(e));
          return r;
        },
        Ve = (e) => {
          if (e === null) return 'null';
          var t = typeof e;
          return t === 'object' || t === 'array' || t === 'function' ? e.toString() : '' + e;
        },
        an = (e, t) => {
          switch (t) {
            case 4:
              return function (r) {
                return this.fromWireType(rt[r >> 2]);
              };
            case 8:
              return function (r) {
                return this.fromWireType(at[r >> 3]);
              };
            default:
              throw new TypeError(`invalid float width (${t}): ${e}`);
          }
        },
        on = (e, t, r) => {
          switch (t) {
            case 1:
              return r ? (o) => G[o] : (o) => b[o];
            case 2:
              return r ? (o) => Q[o >> 1] : (o) => re[o >> 1];
            case 4:
              return r ? (o) => A[o >> 2] : (o) => L[o >> 2];
            default:
              throw new TypeError(`invalid integer width (${t}): ${e}`);
          }
        },
        It = typeof TextDecoder < 'u' ? new TextDecoder('utf-16le') : void 0,
        sn = (e, t) => {
          for (var r = e >> 1, o = r + t / 2; !(r >= o) && re[r]; ) ++r;
          if (((r <<= 1), 32 < r - e && It)) return It.decode(b.subarray(e, r));
          for (r = '', o = 0; !(o >= t / 2); ++o) {
            var i = Q[(e + 2 * o) >> 1];
            if (i == 0) break;
            r += String.fromCharCode(i);
          }
          return r;
        },
        ln = (e, t, r) => {
          if ((r ?? (r = 2147483647), 2 > r)) return 0;
          r -= 2;
          var o = t;
          r = r < 2 * e.length ? r / 2 : e.length;
          for (var i = 0; i < r; ++i) (Q[t >> 1] = e.charCodeAt(i)), (t += 2);
          return (Q[t >> 1] = 0), t - o;
        },
        dn = (e) => 2 * e.length,
        un = (e, t) => {
          for (var r = 0, o = ''; !(r >= t / 4); ) {
            var i = A[(e + 4 * r) >> 2];
            if (i == 0) break;
            ++r,
              65536 <= i
                ? ((i -= 65536), (o += String.fromCharCode(55296 | (i >> 10), 56320 | (i & 1023))))
                : (o += String.fromCharCode(i));
          }
          return o;
        },
        cn = (e, t, r) => {
          if ((r ?? (r = 2147483647), 4 > r)) return 0;
          var o = t;
          r = o + r - 4;
          for (var i = 0; i < e.length; ++i) {
            var l = e.charCodeAt(i);
            if (55296 <= l && 57343 >= l) {
              var h = e.charCodeAt(++i);
              l = (65536 + ((l & 1023) << 10)) | (h & 1023);
            }
            if (((A[t >> 2] = l), (t += 4), t + 4 > r)) break;
          }
          return (A[t >> 2] = 0), t - o;
        },
        hn = (e) => {
          for (var t = 0, r = 0; r < e.length; ++r) {
            var o = e.charCodeAt(r);
            55296 <= o && 57343 >= o && ++r, (t += 4);
          }
          return t;
        },
        Ye = [],
        pn = (e) => {
          var t = Ye.length;
          return Ye.push(e), t;
        },
        mn = (e, t) => {
          for (var r = Array(e), o = 0; o < e; ++o) r[o] = He(L[(t + 4 * o) >> 2], 'parameter ' + o);
          return r;
        },
        fn = Reflect.construct,
        Ge = {},
        xt = () => {
          if (!Ne) {
            var e = {
                USER: 'web_user',
                LOGNAME: 'web_user',
                PATH: '/',
                PWD: '/',
                HOME: '/home/web_user',
                LANG:
                  ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace(
                    '-',
                    '_',
                  ) + '.UTF-8',
                _: Y || './this.program',
              },
              t;
            for (t in Ge) Ge[t] === void 0 ? delete e[t] : (e[t] = Ge[t]);
            var r = [];
            for (t in e) r.push(`${t}=${e[t]}`);
            Ne = r;
          }
          return Ne;
        },
        Ne,
        vn = [null, [], []],
        yn = () => {
          if (typeof crypto == 'object' && typeof crypto.getRandomValues == 'function')
            return (e) => crypto.getRandomValues(e);
          ye('initRandomDevice');
        },
        Pt = (e) => (Pt = yn())(e),
        Le = (e) => e % 4 === 0 && (e % 100 !== 0 || e % 400 === 0),
        At = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
        Tt = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
      function gn(e) {
        var t = Array(ft(e) + 1);
        return vt(e, t, 0, t.length), t;
      }
      var wn = (e, t, r, o) => {
        function i(u, v, y) {
          for (u = typeof u == 'number' ? u.toString() : u || ''; u.length < v; ) u = y[0] + u;
          return u;
        }
        function l(u, v) {
          return i(u, v, '0');
        }
        function h(u, v) {
          function y(V) {
            return 0 > V ? -1 : 0 < V ? 1 : 0;
          }
          var x;
          return (
            (x = y(u.getFullYear() - v.getFullYear())) === 0 &&
              (x = y(u.getMonth() - v.getMonth())) === 0 &&
              (x = y(u.getDate() - v.getDate())),
            x
          );
        }
        function c(u) {
          switch (u.getDay()) {
            case 0:
              return new Date(u.getFullYear() - 1, 11, 29);
            case 1:
              return u;
            case 2:
              return new Date(u.getFullYear(), 0, 3);
            case 3:
              return new Date(u.getFullYear(), 0, 2);
            case 4:
              return new Date(u.getFullYear(), 0, 1);
            case 5:
              return new Date(u.getFullYear() - 1, 11, 31);
            case 6:
              return new Date(u.getFullYear() - 1, 11, 30);
          }
        }
        function m(u) {
          var v = u.Ia;
          for (u = new Date(new Date(u.Ja + 1900, 0, 1).getTime()); 0 < v; ) {
            var y = u.getMonth(),
              x = (Le(u.getFullYear()) ? At : Tt)[y];
            if (v > x - u.getDate())
              (v -= x - u.getDate() + 1),
                u.setDate(1),
                11 > y ? u.setMonth(y + 1) : (u.setMonth(0), u.setFullYear(u.getFullYear() + 1));
            else {
              u.setDate(u.getDate() + v);
              break;
            }
          }
          return (
            (y = new Date(u.getFullYear() + 1, 0, 4)),
            (v = c(new Date(u.getFullYear(), 0, 4))),
            (y = c(y)),
            0 >= h(v, u) ? (0 >= h(y, u) ? u.getFullYear() + 1 : u.getFullYear()) : u.getFullYear() - 1
          );
        }
        var p = L[(o + 40) >> 2];
        (o = {
          sb: A[o >> 2],
          rb: A[(o + 4) >> 2],
          Ra: A[(o + 8) >> 2],
          Va: A[(o + 12) >> 2],
          Sa: A[(o + 16) >> 2],
          Ja: A[(o + 20) >> 2],
          Ga: A[(o + 24) >> 2],
          Ia: A[(o + 28) >> 2],
          wb: A[(o + 32) >> 2],
          qb: A[(o + 36) >> 2],
          tb: p && p ? J(b, p) : '',
        }),
          (r = r ? J(b, r) : ''),
          (p = {
            '%c': '%a %b %d %H:%M:%S %Y',
            '%D': '%m/%d/%y',
            '%F': '%Y-%m-%d',
            '%h': '%b',
            '%r': '%I:%M:%S %p',
            '%R': '%H:%M',
            '%T': '%H:%M:%S',
            '%x': '%m/%d/%y',
            '%X': '%H:%M:%S',
            '%Ec': '%c',
            '%EC': '%C',
            '%Ex': '%m/%d/%y',
            '%EX': '%H:%M:%S',
            '%Ey': '%y',
            '%EY': '%Y',
            '%Od': '%d',
            '%Oe': '%e',
            '%OH': '%H',
            '%OI': '%I',
            '%Om': '%m',
            '%OM': '%M',
            '%OS': '%S',
            '%Ou': '%u',
            '%OU': '%U',
            '%OV': '%V',
            '%Ow': '%w',
            '%OW': '%W',
            '%Oy': '%y',
          });
        for (var f in p) r = r.replace(new RegExp(f, 'g'), p[f]);
        var _ = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday'.split(' '),
          C = 'January February March April May June July August September October November December'.split(' ');
        (p = {
          '%a': (u) => _[u.Ga].substring(0, 3),
          '%A': (u) => _[u.Ga],
          '%b': (u) => C[u.Sa].substring(0, 3),
          '%B': (u) => C[u.Sa],
          '%C': (u) => l(((u.Ja + 1900) / 100) | 0, 2),
          '%d': (u) => l(u.Va, 2),
          '%e': (u) => i(u.Va, 2, ' '),
          '%g': (u) => m(u).toString().substring(2),
          '%G': m,
          '%H': (u) => l(u.Ra, 2),
          '%I': (u) => ((u = u.Ra), u == 0 ? (u = 12) : 12 < u && (u -= 12), l(u, 2)),
          '%j': (u) => {
            for (var v = 0, y = 0; y <= u.Sa - 1; v += (Le(u.Ja + 1900) ? At : Tt)[y++]);
            return l(u.Va + v, 3);
          },
          '%m': (u) => l(u.Sa + 1, 2),
          '%M': (u) => l(u.rb, 2),
          '%n': () => `
`,
          '%p': (u) => (0 <= u.Ra && 12 > u.Ra ? 'AM' : 'PM'),
          '%S': (u) => l(u.sb, 2),
          '%t': () => '	',
          '%u': (u) => u.Ga || 7,
          '%U': (u) => l(Math.floor((u.Ia + 7 - u.Ga) / 7), 2),
          '%V': (u) => {
            var v = Math.floor((u.Ia + 7 - ((u.Ga + 6) % 7)) / 7);
            if ((2 >= (u.Ga + 371 - u.Ia - 2) % 7 && v++, v))
              v == 53 && ((y = (u.Ga + 371 - u.Ia) % 7), y == 4 || (y == 3 && Le(u.Ja)) || (v = 1));
            else {
              v = 52;
              var y = (u.Ga + 7 - u.Ia - 1) % 7;
              (y == 4 || (y == 5 && Le((u.Ja % 400) - 1))) && v++;
            }
            return l(v, 2);
          },
          '%w': (u) => u.Ga,
          '%W': (u) => l(Math.floor((u.Ia + 7 - ((u.Ga + 6) % 7)) / 7), 2),
          '%y': (u) => (u.Ja + 1900).toString().substring(2),
          '%Y': (u) => u.Ja + 1900,
          '%z': (u) => {
            u = u.qb;
            var v = 0 <= u;
            return (u = Math.abs(u) / 60), (v ? '+' : '-') + ('0000' + ((u / 60) * 100 + (u % 60))).slice(-4);
          },
          '%Z': (u) => u.tb,
          '%%': () => '%',
        }),
          (r = r.replace(/%%/g, '\0\0'));
        for (f in p) r.includes(f) && (r = r.replace(new RegExp(f, 'g'), p[f](o)));
        return (r = r.replace(/\0\0/g, '%')), (f = gn(r)), f.length > t ? 0 : (G.set(f, e), f.length - 1);
      };
      ie = a.InternalError = class extends Error {
        constructor(e) {
          super(e), (this.name = 'InternalError');
        }
      };
      for (var St = Array(256), be = 0; 256 > be; ++be) St[be] = String.fromCharCode(be);
      (yt = St),
        (g = a.BindingError =
          class extends Error {
            constructor(e) {
              super(e), (this.name = 'BindingError');
            }
          }),
        Object.assign(Ee.prototype, {
          isAliasOf: function (e) {
            if (!(this instanceof Ee && e instanceof Ee)) return !1;
            var t = this.ma.za.xa,
              r = this.ma.ya;
            e.ma = e.ma;
            var o = e.ma.za.xa;
            for (e = e.ma.ya; t.Ca; ) (r = t.Na(r)), (t = t.Ca);
            for (; o.Ca; ) (e = o.Na(e)), (o = o.Ca);
            return t === o && r === e;
          },
          clone: function () {
            if ((this.ma.ya || Re(this), this.ma.Ma)) return (this.ma.count.value += 1), this;
            var e = ue,
              t = Object,
              r = t.create,
              o = Object.getPrototypeOf(this),
              i = this.ma;
            return (
              (e = e(
                r.call(t, o, {
                  ma: { value: { count: i.count, Ka: i.Ka, Ma: i.Ma, ya: i.ya, za: i.za, Aa: i.Aa, Da: i.Da } },
                }),
              )),
              (e.ma.count.value += 1),
              (e.ma.Ka = !1),
              e
            );
          },
          delete() {
            if ((this.ma.ya || Re(this), this.ma.Ka && !this.ma.Ma))
              throw new g('Object already scheduled for deletion');
            gt(this);
            var e = this.ma;
            --e.count.value,
              e.count.value === 0 && (e.Aa ? e.Da.Fa(e.Aa) : e.za.xa.Fa(e.ya)),
              this.ma.Ma || ((this.ma.Aa = void 0), (this.ma.ya = void 0));
          },
          isDeleted: function () {
            return !this.ma.ya;
          },
          deleteLater: function () {
            if ((this.ma.ya || Re(this), this.ma.Ka && !this.ma.Ma))
              throw new g('Object already scheduled for deletion');
            return se.push(this), se.length === 1 && le && le(ke), (this.ma.Ka = !0), this;
          },
        }),
        (a.getInheritedInstanceCount = () => Object.keys(de).length),
        (a.getLiveInheritedInstances = () => {
          var e = [],
            t;
          for (t in de) de.hasOwnProperty(t) && e.push(de[t]);
          return e;
        }),
        (a.flushPendingDeletes = ke),
        (a.setDelayFunction = (e) => {
          (le = e), se.length && le && le(ke);
        }),
        Object.assign(he.prototype, {
          eb(e) {
            return this.Za && (e = this.Za(e)), e;
          },
          Xa(e) {
            this.Fa?.(e);
          },
          argPackAdvance: 8,
          readValueFromPointer: oe,
          fromWireType: function (e) {
            function t() {
              return this.Qa
                ? _e(this.xa.La, { za: this.jb, ya: r, Da: this, Aa: e })
                : _e(this.xa.La, { za: this, ya: e });
            }
            var r = this.eb(e);
            if (!r) return this.Xa(e), null;
            var o = Jt(this.xa, r);
            if (o !== void 0)
              return o.ma.count.value === 0
                ? ((o.ma.ya = r), (o.ma.Aa = e), o.clone())
                : ((o = o.clone()), this.Xa(e), o);
            if (((o = this.xa.cb(r)), (o = _t[o]), !o)) return t.call(this);
            o = this.Pa ? o.$a : o.pointerType;
            var i = wt(r, this.xa, o.xa);
            return i === null
              ? t.call(this)
              : this.Qa
              ? _e(o.xa.La, { za: o, ya: i, Da: this, Aa: e })
              : _e(o.xa.La, { za: o, ya: i });
          },
        }),
        (Mt = a.UnboundTypeError =
          ((e, t) => {
            var r = ce(t, function (o) {
              (this.name = t),
                (this.message = o),
                (o = Error(o).stack),
                o !== void 0 &&
                  (this.stack =
                    this.toString() +
                    `
` +
                    o.replace(/^Error(:[^\n]*)?\n/, ''));
            });
            return (
              (r.prototype = Object.create(e.prototype)),
              (r.prototype.constructor = r),
              (r.prototype.toString = function () {
                return this.message === void 0 ? this.name : `${this.name}: ${this.message}`;
              }),
              r
            );
          })(Error, 'UnboundTypeError')),
        B.push(0, 1, void 0, 1, null, 1, !0, 1, !1, 1),
        (a.count_emval_handles = () => B.length / 2 - 5 - Be.length);
      var _n = {
          c: (e, t, r, o) => {
            ye(
              `Assertion failed: ${e ? J(b, e) : ''}, at: ` +
                [t ? (t ? J(b, t) : '') : 'unknown filename', r, o ? (o ? J(b, o) : '') : 'unknown function'],
            );
          },
          m: (e, t, r) => {
            var o = new Yt(e);
            throw ((L[(o.ya + 16) >> 2] = 0), (L[(o.ya + 4) >> 2] = t), (L[(o.ya + 8) >> 2] = r), (mt = e), mt);
          },
          B: function () {
            return 0;
          },
          P: () => {},
          M: () => {},
          R: function () {
            return 0;
          },
          N: () => {},
          A: function () {},
          O: () => {},
          v: (e) => {
            var t = ge[e];
            delete ge[e];
            var r = t.Ua,
              o = t.Fa,
              i = t.Ya,
              l = i.map((h) => h.hb).concat(i.map((h) => h.nb));
            H([e], l, (h) => {
              var c = {};
              return (
                i.forEach((m, p) => {
                  var f = h[p],
                    _ = m.fb,
                    C = m.gb,
                    u = h[p + i.length],
                    v = m.mb,
                    y = m.ob;
                  c[m.bb] = {
                    read: (x) => f.fromWireType(_(C, x)),
                    write: (x, V) => {
                      var S = [];
                      v(y, x, u.toWireType(S, V)), Se(S);
                    },
                  };
                }),
                [
                  {
                    name: t.name,
                    fromWireType: (m) => {
                      var p = {},
                        f;
                      for (f in c) p[f] = c[f].read(m);
                      return o(m), p;
                    },
                    toWireType: (m, p) => {
                      for (var f in c) if (!(f in p)) throw new TypeError(`Missing field: "${f}"`);
                      var _ = r();
                      for (f in c) c[f].write(_, p[f]);
                      return m !== null && m.push(o, _), _;
                    },
                    argPackAdvance: 8,
                    readValueFromPointer: oe,
                    Ea: o,
                  },
                ]
              );
            });
          },
          I: () => {},
          Y: (e, t, r, o) => {
            (t = P(t)),
              k(e, {
                name: t,
                fromWireType: function (i) {
                  return !!i;
                },
                toWireType: function (i, l) {
                  return l ? r : o;
                },
                argPackAdvance: 8,
                readValueFromPointer: function (i) {
                  return this.fromWireType(b[i]);
                },
                Ea: null,
              });
          },
          r: (e, t, r, o, i, l, h, c, m, p, f, _, C) => {
            (f = P(f)), (l = T(i, l)), c && (c = T(h, c)), p && (p = T(m, p)), (C = T(_, C));
            var u = Kt(f);
            De(u, function () {
              Ce(`Cannot construct ${f} due to unbound types`, [o]);
            }),
              H([e, t, r], o ? [o] : [], (v) => {
                if (((v = v[0]), o))
                  var y = v.xa,
                    x = y.La;
                else x = Ee.prototype;
                v = ce(f, function (...Ke) {
                  if (Object.getPrototypeOf(this) !== V) throw new g("Use 'new' to construct " + f);
                  if (S.Ha === void 0) throw new g(f + ' has no accessible constructor');
                  var Dt = S.Ha[Ke.length];
                  if (Dt === void 0)
                    throw new g(
                      `Tried to invoke ctor of ${f} with invalid number of parameters (${
                        Ke.length
                      }) - expected (${Object.keys(S.Ha).toString()}) parameters instead!`,
                    );
                  return Dt.apply(this, Ke);
                });
                var V = Object.create(x, { constructor: { value: v } });
                v.prototype = V;
                var S = new Xt(f, v, V, C, y, l, c, p);
                if (S.Ca) {
                  var pe;
                  (pe = S.Ca).Wa ?? (pe.Wa = []), S.Ca.Wa.push(S);
                }
                return (
                  (y = new he(f, S, !0, !1, !1)),
                  (pe = new he(f + '*', S, !1, !1, !1)),
                  (x = new he(f + ' const*', S, !1, !0, !1)),
                  (_t[e] = { pointerType: pe, $a: x }),
                  Ct(u, v),
                  [y, pe, x]
                );
              });
          },
          q: (e, t, r, o, i, l) => {
            var h = Oe(t, r);
            (i = T(o, i)),
              H([], [e], (c) => {
                c = c[0];
                var m = `constructor ${c.name}`;
                if ((c.xa.Ha === void 0 && (c.xa.Ha = []), c.xa.Ha[t - 1] !== void 0))
                  throw new g(
                    `Cannot register multiple constructors with identical number of parameters (${t - 1}) for class '${
                      c.name
                    }'! Overload resolution is currently only performed using the parameter count, not actual type info!`,
                  );
                return (
                  (c.xa.Ha[t - 1] = () => {
                    Ce(`Cannot construct ${c.name} due to unbound types`, h);
                  }),
                  H([], h, (p) => (p.splice(1, 0, null), (c.xa.Ha[t - 1] = We(m, p, null, i, l)), [])),
                  []
                );
              });
          },
          f: (e, t, r, o, i, l, h, c) => {
            var m = Oe(r, o);
            (t = P(t)),
              (t = bt(t)),
              (l = T(i, l)),
              H([], [e], (p) => {
                function f() {
                  Ce(`Cannot call ${_} due to unbound types`, m);
                }
                p = p[0];
                var _ = `${p.name}.${t}`;
                t.startsWith('@@') && (t = Symbol[t.substring(2)]), c && p.xa.kb.push(t);
                var C = p.xa.La,
                  u = C[t];
                return (
                  u === void 0 || (u.Ba === void 0 && u.className !== p.name && u.Oa === r - 2)
                    ? ((f.Oa = r - 2), (f.className = p.name), (C[t] = f))
                    : (Et(C, t, _), (C[t].Ba[r - 2] = f)),
                  H(
                    [],
                    m,
                    (v) => (
                      (v = We(_, v, p, l, h)),
                      C[t].Ba === void 0 ? ((v.Oa = r - 2), (C[t] = v)) : (C[t].Ba[r - 2] = v),
                      []
                    ),
                  ),
                  []
                );
              });
          },
          X: (e) => k(e, Ft),
          x: (e, t, r, o) => {
            function i() {}
            (t = P(t)),
              (i.values = {}),
              k(e, {
                name: t,
                constructor: i,
                fromWireType: function (l) {
                  return this.constructor.values[l];
                },
                toWireType: (l, h) => h.value,
                argPackAdvance: 8,
                readValueFromPointer: rn(t, r, o),
                Ea: null,
              }),
              De(t, i);
          },
          k: (e, t, r) => {
            var o = He(e, 'enum');
            (t = P(t)),
              (e = o.constructor),
              (o = Object.create(o.constructor.prototype, {
                value: { value: r },
                constructor: { value: ce(`${o.name}_${t}`, function () {}) },
              })),
              (e.values[r] = o),
              (e[t] = o);
          },
          C: (e, t, r) => {
            (t = P(t)),
              k(e, {
                name: t,
                fromWireType: (o) => o,
                toWireType: (o, i) => i,
                argPackAdvance: 8,
                readValueFromPointer: an(t, r),
                Ea: null,
              });
          },
          E: (e, t, r, o, i, l) => {
            var h = Oe(t, r);
            (e = P(e)),
              (e = bt(e)),
              (i = T(o, i)),
              De(
                e,
                function () {
                  Ce(`Cannot call ${e} due to unbound types`, h);
                },
                t - 1,
              ),
              H([], h, (c) => (Ct(e, We(e, [c[0], null].concat(c.slice(1)), null, i, l), t - 1), []));
          },
          l: (e, t, r, o, i) => {
            if (((t = P(t)), i === -1 && (i = 4294967295), (i = (c) => c), o === 0)) {
              var l = 32 - 8 * r;
              i = (c) => (c << l) >>> l;
            }
            var h = t.includes('unsigned')
              ? function (c, m) {
                  return m >>> 0;
                }
              : function (c, m) {
                  return m;
                };
            k(e, {
              name: t,
              fromWireType: i,
              toWireType: h,
              argPackAdvance: 8,
              readValueFromPointer: on(t, r, o !== 0),
              Ea: null,
            });
          },
          g: (e, t, r) => {
            function o(l) {
              return new i(G.buffer, L[(l + 4) >> 2], L[l >> 2]);
            }
            var i = [
              Int8Array,
              Uint8Array,
              Int16Array,
              Uint16Array,
              Int32Array,
              Uint32Array,
              Float32Array,
              Float64Array,
            ][t];
            (r = P(r)), k(e, { name: r, fromWireType: o, argPackAdvance: 8, readValueFromPointer: o }, { ib: !0 });
          },
          w: (e) => {
            k(e, Ft);
          },
          ca: (e, t, r, o, i, l, h, c, m, p, f, _) => {
            (r = P(r)),
              (l = T(i, l)),
              (c = T(h, c)),
              (p = T(m, p)),
              (_ = T(f, _)),
              H([e], [t], (C) => ((C = C[0]), [new he(r, C.xa, !1, !1, !0, C, o, l, c, p, _)]));
          },
          D: (e, t) => {
            t = P(t);
            var r = t === 'std::string';
            k(e, {
              name: t,
              fromWireType: function (o) {
                var i = L[o >> 2],
                  l = o + 4;
                if (r)
                  for (var h = l, c = 0; c <= i; ++c) {
                    var m = l + c;
                    if (c == i || b[m] == 0) {
                      if (((h = h ? J(b, h, m - h) : ''), p === void 0)) var p = h;
                      else (p += '\0'), (p += h);
                      h = m + 1;
                    }
                  }
                else {
                  for (p = Array(i), c = 0; c < i; ++c) p[c] = String.fromCharCode(b[l + c]);
                  p = p.join('');
                }
                return j(o), p;
              },
              toWireType: function (o, i) {
                i instanceof ArrayBuffer && (i = new Uint8Array(i));
                var l = typeof i == 'string';
                if (!(l || i instanceof Uint8Array || i instanceof Uint8ClampedArray || i instanceof Int8Array))
                  throw new g('Cannot pass non-string to std::string');
                var h = r && l ? ft(i) : i.length,
                  c = Je(4 + h + 1),
                  m = c + 4;
                if (((L[c >> 2] = h), r && l)) vt(i, b, m, h + 1);
                else if (l)
                  for (l = 0; l < h; ++l) {
                    var p = i.charCodeAt(l);
                    if (255 < p) throw (j(m), new g('String has UTF-16 code units that do not fit in 8 bits'));
                    b[m + l] = p;
                  }
                else for (l = 0; l < h; ++l) b[m + l] = i[l];
                return o !== null && o.push(j, c), c;
              },
              argPackAdvance: 8,
              readValueFromPointer: oe,
              Ea(o) {
                j(o);
              },
            });
          },
          u: (e, t, r) => {
            if (((r = P(r)), t === 2))
              var o = sn,
                i = ln,
                l = dn,
                h = (c) => re[c >> 1];
            else t === 4 && ((o = un), (i = cn), (l = hn), (h = (c) => L[c >> 2]));
            k(e, {
              name: r,
              fromWireType: (c) => {
                for (var m = L[c >> 2], p, f = c + 4, _ = 0; _ <= m; ++_) {
                  var C = c + 4 + _ * t;
                  (_ == m || h(C) == 0) &&
                    ((f = o(f, C - f)), p === void 0 ? (p = f) : ((p += '\0'), (p += f)), (f = C + t));
                }
                return j(c), p;
              },
              toWireType: (c, m) => {
                if (typeof m != 'string') throw new g(`Cannot pass non-string to C++ string type ${r}`);
                var p = l(m),
                  f = Je(4 + p + t);
                return (L[f >> 2] = p / t), i(m, f + 4, p + t), c !== null && c.push(j, f), f;
              },
              argPackAdvance: 8,
              readValueFromPointer: oe,
              Ea(c) {
                j(c);
              },
            });
          },
          s: (e, t, r, o, i, l) => {
            ge[e] = { name: P(t), Ua: T(r, o), Fa: T(i, l), Ya: [] };
          },
          j: (e, t, r, o, i, l, h, c, m, p) => {
            ge[e].Ya.push({ bb: P(t), hb: r, fb: T(o, i), gb: l, nb: h, mb: T(c, m), ob: p });
          },
          Z: (e, t) => {
            (t = P(t)), k(e, { ub: !0, name: t, argPackAdvance: 0, fromWireType: () => {}, toWireType: () => {} });
          },
          J: () => {
            throw 1 / 0;
          },
          aa: (e, t, r, o) => ((e = Ye[e]), (t = Ue(t)), e(null, t, r, o)),
          F: je,
          $: (e, t, r) => {
            var o = mn(e, t),
              i = o.shift();
            e--;
            var l = Array(e);
            return (
              (t = `methodCaller<(${o.map((h) => h.name).join(', ')}) => ${i.name}>`),
              pn(
                ce(t, (h, c, m, p) => {
                  for (var f = 0, _ = 0; _ < e; ++_)
                    (l[_] = o[_].readValueFromPointer(p + f)), (f += o[_].argPackAdvance);
                  return (
                    (c = r === 1 ? fn(c, l) : c.apply(h, l)),
                    (h = []),
                    (c = i.toWireType(h, c)),
                    h.length && (L[m >> 2] = Me(h)),
                    c
                  );
                }),
              )
            );
          },
          ba: (e) => {
            9 < e && (B[e + 1] += 1);
          },
          _: (e) => {
            var t = Ue(e);
            Se(t), je(e);
          },
          o: (e, t) => ((e = He(e, '_emval_take_value')), (e = e.readValueFromPointer(t)), Me(e)),
          W: () => {
            ye('');
          },
          V: () => performance.now(),
          L: (e) => {
            var t = b.length;
            if (((e >>>= 0), 2147483648 < e)) return !1;
            for (var r = 1; 4 >= r; r *= 2) {
              var o = t * (1 + 0.2 / r);
              o = Math.min(o, e + 100663296);
              var i = Math;
              o = Math.max(e, o);
              e: {
                i =
                  (i.min.call(i, 2147483648, o + ((65536 - (o % 65536)) % 65536)) - ve.buffer.byteLength + 65535) /
                  65536;
                try {
                  ve.grow(i), ot();
                  var l = 1;
                  break e;
                } catch {}
                l = void 0;
              }
              if (l) return !0;
            }
            return !1;
          },
          S: (e, t) => {
            var r = 0;
            return (
              xt().forEach((o, i) => {
                var l = t + r;
                for (i = L[(e + 4 * i) >> 2] = l, l = 0; l < o.length; ++l) G[i++] = o.charCodeAt(l);
                (G[i] = 0), (r += o.length + 1);
              }),
              0
            );
          },
          T: (e, t) => {
            var r = xt();
            L[e >> 2] = r.length;
            var o = 0;
            return r.forEach((i) => (o += i.length + 1)), (L[t >> 2] = o), 0;
          },
          t: () => 52,
          z: () => 52,
          H: function () {
            return 70;
          },
          Q: (e, t, r, o) => {
            for (var i = 0, l = 0; l < r; l++) {
              var h = L[t >> 2],
                c = L[(t + 4) >> 2];
              t += 8;
              for (var m = 0; m < c; m++) {
                var p = b[h + m],
                  f = vn[e];
                p === 0 || p === 10 ? ((e === 1 ? jt : Z)(J(f, 0)), (f.length = 0)) : f.push(p);
              }
              i += c;
            }
            return (L[o >> 2] = i), 0;
          },
          U: (e, t) => (Pt(b.subarray(e, e + t)), 0),
          i: bn,
          d: Ln,
          e: Mn,
          p: Fn,
          y: Pn,
          b: En,
          a: Cn,
          h: xn,
          n: In,
          G: An,
          K: (e, t, r, o) => wn(e, t, r, o),
        },
        F = (function () {
          function e(r) {
            return (
              (F = r.exports),
              (ve = F.da),
              ot(),
              (R = F.ha),
              st.unshift(F.ea),
              N--,
              a.monitorRunDependencies?.(N),
              N == 0 && ae && ((r = ae), (ae = null), r()),
              F
            );
          }
          var t = { a: _n };
          if ((N++, a.monitorRunDependencies?.(N), a.instantiateWasm))
            try {
              return a.instantiateWasm(t, e);
            } catch (r) {
              Z(`Module.instantiateWasm callback failed with error: ${r}`), w(r);
            }
          return (
            Vt(t, function (r) {
              e(r.instance);
            }).catch(w),
            {}
          );
        })(),
        Je = (e) => (Je = F.fa)(e),
        Rt = (e) => (Rt = F.ga)(e),
        j = (e) => (j = F.ia)(e),
        D = (e, t) => (D = F.ja)(e, t),
        z = (e) => (z = F.ka)(e),
        O = () => (O = F.la)();
      (a.dynCall_iijj = (e, t, r, o, i, l) => (a.dynCall_iijj = F.na)(e, t, r, o, i, l)),
        (a.dynCall_vijj = (e, t, r, o, i, l) => (a.dynCall_vijj = F.oa)(e, t, r, o, i, l)),
        (a.dynCall_jiii = (e, t, r, o) => (a.dynCall_jiii = F.pa)(e, t, r, o)),
        (a.dynCall_jii = (e, t, r) => (a.dynCall_jii = F.qa)(e, t, r));
      var $t = (a.dynCall_viiij = (e, t, r, o, i, l) => ($t = a.dynCall_viiij = F.ra)(e, t, r, o, i, l));
      (a.dynCall_jiji = (e, t, r, o, i) => (a.dynCall_jiji = F.sa)(e, t, r, o, i)),
        (a.dynCall_viijii = (e, t, r, o, i, l, h) => (a.dynCall_viijii = F.ta)(e, t, r, o, i, l, h)),
        (a.dynCall_iiiiij = (e, t, r, o, i, l, h) => (a.dynCall_iiiiij = F.ua)(e, t, r, o, i, l, h)),
        (a.dynCall_iiiiijj = (e, t, r, o, i, l, h, c, m) => (a.dynCall_iiiiijj = F.va)(e, t, r, o, i, l, h, c, m)),
        (a.dynCall_iiiiiijj = (e, t, r, o, i, l, h, c, m, p) =>
          (a.dynCall_iiiiiijj = F.wa)(e, t, r, o, i, l, h, c, m, p));
      function En(e, t) {
        var r = O();
        try {
          R.get(e)(t);
        } catch (o) {
          if ((z(r), o !== o + 0)) throw o;
          D(1, 0);
        }
      }
      function Cn(e, t, r) {
        var o = O();
        try {
          R.get(e)(t, r);
        } catch (i) {
          if ((z(o), i !== i + 0)) throw i;
          D(1, 0);
        }
      }
      function Mn(e, t, r, o) {
        var i = O();
        try {
          return R.get(e)(t, r, o);
        } catch (l) {
          if ((z(i), l !== l + 0)) throw l;
          D(1, 0);
        }
      }
      function Ln(e, t, r) {
        var o = O();
        try {
          return R.get(e)(t, r);
        } catch (i) {
          if ((z(o), i !== i + 0)) throw i;
          D(1, 0);
        }
      }
      function bn(e, t) {
        var r = O();
        try {
          return R.get(e)(t);
        } catch (o) {
          if ((z(r), o !== o + 0)) throw o;
          D(1, 0);
        }
      }
      function Fn(e, t, r, o, i, l) {
        var h = O();
        try {
          return R.get(e)(t, r, o, i, l);
        } catch (c) {
          if ((z(h), c !== c + 0)) throw c;
          D(1, 0);
        }
      }
      function In(e, t, r, o, i) {
        var l = O();
        try {
          R.get(e)(t, r, o, i);
        } catch (h) {
          if ((z(l), h !== h + 0)) throw h;
          D(1, 0);
        }
      }
      function xn(e, t, r, o) {
        var i = O();
        try {
          R.get(e)(t, r, o);
        } catch (l) {
          if ((z(i), l !== l + 0)) throw l;
          D(1, 0);
        }
      }
      function Pn(e) {
        var t = O();
        try {
          R.get(e)();
        } catch (r) {
          if ((z(t), r !== r + 0)) throw r;
          D(1, 0);
        }
      }
      function An(e, t, r, o, i, l) {
        var h = O();
        try {
          $t(e, t, r, o, i, l);
        } catch (c) {
          if ((z(h), c !== c + 0)) throw c;
          D(1, 0);
        }
      }
      var Fe;
      ae = function e() {
        Fe || kt(), Fe || (ae = e);
      };
      function kt() {
        function e() {
          if (!Fe && ((Fe = !0), (a.calledRun = !0), !nt)) {
            if ((Te(st), d(a), a.onRuntimeInitialized && a.onRuntimeInitialized(), a.postRun))
              for (typeof a.postRun == 'function' && (a.postRun = [a.postRun]); a.postRun.length; ) {
                var t = a.postRun.shift();
                lt.unshift(t);
              }
            Te(lt);
          }
        }
        if (!(0 < N)) {
          if (a.preRun) for (typeof a.preRun == 'function' && (a.preRun = [a.preRun]); a.preRun.length; ) Ut();
          Te(it),
            0 < N ||
              (a.setStatus
                ? (a.setStatus('Running...'),
                  setTimeout(function () {
                    setTimeout(function () {
                      a.setStatus('');
                    }, 1),
                      e();
                  }, 1))
                : e());
        }
      }
      if (a.preInit)
        for (typeof a.preInit == 'function' && (a.preInit = [a.preInit]); 0 < a.preInit.length; ) a.preInit.pop()();
      return kt(), $;
    };
  })(),
  zt = $n;
var X = class {
  constructor() {
    throw new Error('RendererLoader is a static class and cannot be instantiated.');
  }
  static async _tryLoad(n) {
    return await zt({ locateFile: () => n });
  }
  static async _loadWithBackup() {
    return (
      this._ModulePromise ||
        (this._ModulePromise = this._tryLoad(this._wasmURL).catch(async (n) => {
          let a = `https://unpkg.com/${me.name}@${me.version}/dist/dotlottie-player.wasm`;
          console.warn(`Primary WASM load failed from ${this._wasmURL}. Error: ${n.message}`),
            console.warn(`Attempting to load WASM from backup URL: ${a}`);
          try {
            return await this._tryLoad(a);
          } catch (d) {
            throw (
              (console.error(`Primary WASM URL failed: ${n.message}`),
              console.error(`Backup WASM URL failed: ${d.message}`),
              new Error('WASM loading failed from all sources.'))
            );
          }
        })),
      this._ModulePromise
    );
  }
  static async load() {
    return this._loadWithBackup();
  }
  static setWasmUrl(n) {
    (this._wasmURL = n), (this._ModulePromise = null);
  }
};
I(X, '_ModulePromise', null),
  I(X, '_wasmURL', `https://cdn.jsdelivr.net/npm/${me.name}@${me.version}/dist/dotlottie-player.wasm`);
var Pe = class {
  constructor() {
    I(this, '_eventListeners', new Map());
  }
  addEventListener(n, a) {
    let d = this._eventListeners.get(n);
    d || ((d = new Set()), this._eventListeners.set(n, d)), d.add(a);
  }
  removeEventListener(n, a) {
    let d = this._eventListeners.get(n);
    d && (a ? (d.delete(a), d.size === 0 && this._eventListeners.delete(n)) : this._eventListeners.delete(n));
  }
  dispatch(n) {
    this._eventListeners.get(n.type)?.forEach((d) => d(n));
  }
  removeAllEventListeners() {
    this._eventListeners.clear();
  }
};
function kn(s) {
  return /^#([\da-f]{6}|[\da-f]{8})$/iu.test(s);
}
function Ot(s) {
  if (!kn(s)) return 0;
  let n = s.replace('#', '');
  return (n = n.length === 6 ? `${n}ff` : n), parseInt(n, 16);
}
function Wt(s) {
  if (s.byteLength < 4) return !1;
  let n = new Uint8Array(s.slice(0, xe.byteLength));
  for (let a = 0; a < xe.length; a += 1) if (xe[a] !== n[a]) return !1;
  return !0;
}
var Qe = (s, n) =>
    s === 'reverse'
      ? n.Mode.Reverse
      : s === 'bounce'
      ? n.Mode.Bounce
      : s === 'reverse-bounce'
      ? n.Mode.ReverseBounce
      : n.Mode.Forward,
  qe = (s, n) =>
    s === 'contain'
      ? n.Fit.Contain
      : s === 'cover'
      ? n.Fit.Cover
      : s === 'fill'
      ? n.Fit.Fill
      : s === 'fit-height'
      ? n.Fit.FitHeight
      : s === 'fit-width'
      ? n.Fit.FitWidth
      : n.Fit.None,
  et = (s, n) => {
    let a = new n.VectorFloat();
    return a.push_back(s[0]), a.push_back(s[1]), a;
  },
  tt = (s, n) => {
    let a = new n.VectorFloat();
    return s.length !== 2 || (a.push_back(s[0]), a.push_back(s[1])), a;
  },
  M = class M {
    constructor(n) {
      I(this, '_canvas');
      I(this, '_context', null);
      I(this, '_eventManager');
      I(this, '_animationFrameId', null);
      I(this, '_frameManager');
      I(this, '_dotLottieCore', null);
      I(this, '_renderConfig', {});
      I(this, '_isFrozen', !1);
      I(this, '_backgroundColor', null);
      (this._canvas = n.canvas),
        (this._context = this._canvas.getContext('2d')),
        (this._eventManager = new Pe()),
        (this._frameManager = new Ie()),
        (this._renderConfig = n.renderConfig ?? {}),
        X.load()
          .then((a) => {
            (M._wasmModule = a),
              (this._dotLottieCore = new a.DotLottiePlayer({
                autoplay: n.autoplay ?? !1,
                backgroundColor: 0,
                loopAnimation: n.loop ?? !1,
                mode: Qe(n.mode ?? 'forward', a),
                segment: tt(n.segment ?? [], a),
                speed: n.speed ?? 1,
                useFrameInterpolation: n.useFrameInterpolation ?? !0,
                marker: n.marker ?? '',
                layout: n.layout ? { align: et(n.layout.align, a), fit: qe(n.layout.fit, a) } : a.createDefaultLayout(),
              })),
              this._eventManager.dispatch({ type: 'ready' }),
              n.data ? this._loadFromData(n.data) : n.src && this._loadFromSrc(n.src),
              n.backgroundColor && this.setBackgroundColor(n.backgroundColor);
          })
          .catch((a) => {
            this._eventManager.dispatch({ type: 'loadError', error: new Error(`Failed to load wasm module: ${a}`) });
          });
    }
    _loadFromSrc(n) {
      async function a() {
        let d = await fetch(n);
        if (!d.ok) throw new Error(`Failed to fetch the animation data from URL: ${n}. ${d.status}: ${d.statusText}`);
        let w = await d.arrayBuffer();
        return Wt(w) ? w : d.text();
      }
      a()
        .then((d) => {
          this._loadFromData(d);
        })
        .catch((d) => {
          this._eventManager.dispatch({
            type: 'loadError',
            error: new Error(`Failed to load animation data from URL: ${n}. ${d}`),
          });
        });
    }
    _loadFromData(n) {
      if (this._dotLottieCore === null) return;
      let a = this._canvas.width,
        d = this._canvas.height,
        w = !1;
      if (typeof n == 'string') w = this._dotLottieCore.loadAnimationData(n, a, d);
      else if (n instanceof ArrayBuffer) w = this._dotLottieCore.loadDotLottieData(n, a, d);
      else if (typeof n == 'object') w = this._dotLottieCore.loadAnimationData(JSON.stringify(n), a, d);
      else {
        this._eventManager.dispatch({
          type: 'loadError',
          error: new Error('Unsupported data type for animation data. Expected a string or ArrayBuffer.'),
        });
        return;
      }
      w
        ? (this._eventManager.dispatch({ type: 'load' }),
          te && this.resize(),
          this._eventManager.dispatch({ type: 'frame', currentFrame: this._dotLottieCore.currentFrame() }),
          this._render(),
          this._dotLottieCore.config().autoplay &&
            (this._dotLottieCore.play(),
            this._dotLottieCore.isPlaying()
              ? (this._eventManager.dispatch({ type: 'play' }),
                (this._animationFrameId = this._frameManager.requestAnimationFrame(this._draw.bind(this))))
              : console.error('something went wrong, the animation was suppose to autoplay')))
        : this._eventManager.dispatch({ type: 'loadError', error: new Error('Failed to load animation data') });
    }
    get activeAnimationId() {
      return this._dotLottieCore?.activeAnimationId();
    }
    get activeThemeId() {
      return this._dotLottieCore?.activeThemeId();
    }
    get layout() {
      let n = this._dotLottieCore?.config().layout;
      if (n)
        return {
          align: [n.align.get(0), n.align.get(1)],
          fit: (() => {
            switch (n.fit) {
              case M._wasmModule?.Fit.Contain:
                return 'contain';
              case M._wasmModule?.Fit.Cover:
                return 'cover';
              case M._wasmModule?.Fit.Fill:
                return 'fill';
              case M._wasmModule?.Fit.FitHeight:
                return 'fit-height';
              case M._wasmModule?.Fit.FitWidth:
                return 'fit-width';
              case M._wasmModule?.Fit.None:
                return 'none';
              default:
                return 'contain';
            }
          })(),
        };
    }
    get marker() {
      return this._dotLottieCore?.config().marker;
    }
    get manifest() {
      try {
        let n = this._dotLottieCore?.manifestString();
        if (this._dotLottieCore === null || !n) return null;
        let a = JSON.parse(n);
        return Object.keys(a).length === 0 ? null : a;
      } catch {
        return null;
      }
    }
    get renderConfig() {
      return this._renderConfig;
    }
    get segment() {
      let n = this._dotLottieCore?.config().segment;
      if (n && n.size() === 2) return [n.get(0), n.get(1)];
    }
    get loop() {
      return this._dotLottieCore?.config().loopAnimation ?? !1;
    }
    get mode() {
      let n = this._dotLottieCore?.config().mode;
      return n === M._wasmModule?.Mode.Reverse
        ? 'reverse'
        : n === M._wasmModule?.Mode.Bounce
        ? 'bounce'
        : n === M._wasmModule?.Mode.ReverseBounce
        ? 'reverse-bounce'
        : 'forward';
    }
    get isFrozen() {
      return this._isFrozen;
    }
    get backgroundColor() {
      return this._backgroundColor ?? '';
    }
    get autoplay() {
      return this._dotLottieCore?.config().autoplay ?? !1;
    }
    get useFrameInterpolation() {
      return this._dotLottieCore?.config().useFrameInterpolation ?? !1;
    }
    get speed() {
      return this._dotLottieCore?.config().speed ?? 0;
    }
    get isReady() {
      return this._dotLottieCore !== null;
    }
    get isLoaded() {
      return this._dotLottieCore?.isLoaded() ?? !1;
    }
    get isPlaying() {
      return this._dotLottieCore?.isPlaying() ?? !1;
    }
    get isPaused() {
      return this._dotLottieCore?.isPaused() ?? !1;
    }
    get isStopped() {
      return this._dotLottieCore?.isStopped() ?? !1;
    }
    get currentFrame() {
      return this._dotLottieCore?.currentFrame() ?? 0;
    }
    get loopCount() {
      return this._dotLottieCore?.loopCount() ?? 0;
    }
    get totalFrames() {
      return this._dotLottieCore?.totalFrames() ?? 0;
    }
    get duration() {
      return this._dotLottieCore?.duration() ?? 0;
    }
    get segmentDuration() {
      return this._dotLottieCore?.segmentDuration() ?? 0;
    }
    get canvas() {
      return this._canvas;
    }
    load(n) {
      this._dotLottieCore === null ||
        M._wasmModule === null ||
        (this._dotLottieCore.setConfig({
          autoplay: n.autoplay ?? !1,
          backgroundColor: 0,
          loopAnimation: n.loop ?? !1,
          mode: Qe(n.mode ?? 'forward', M._wasmModule),
          segment: tt(n.segment ?? [], M._wasmModule),
          speed: n.speed ?? 1,
          useFrameInterpolation: n.useFrameInterpolation ?? !0,
          marker: n.marker ?? '',
          layout: n.layout
            ? { align: et(n.layout.align, M._wasmModule), fit: qe(n.layout.fit, M._wasmModule) }
            : M._wasmModule.createDefaultLayout(),
        }),
        n.data ? this._loadFromData(n.data) : n.src && this._loadFromSrc(n.src),
        this.setBackgroundColor(n.backgroundColor ?? ''));
    }
    _render() {
      if (this._dotLottieCore === null || this._context === null) return !1;
      if (this._dotLottieCore.render()) {
        let a = this._dotLottieCore.buffer(),
          d = new Uint8ClampedArray(a, 0, this._canvas.width * this._canvas.height * 4),
          w = null;
        return (
          typeof ImageData > 'u'
            ? ((w = this._context.createImageData(this._canvas.width, this._canvas.height)), w.data.set(d))
            : (w = new ImageData(d, this._canvas.width, this._canvas.height)),
          this._context.putImageData(w, 0, 0),
          this._eventManager.dispatch({ type: 'render', currentFrame: this._dotLottieCore.currentFrame() }),
          !0
        );
      }
      return !1;
    }
    _draw() {
      if (this._dotLottieCore === null || this._context === null || !this._dotLottieCore.isPlaying()) return;
      let n = this._dotLottieCore.requestFrame();
      this._dotLottieCore.setFrame(n) &&
        (this._eventManager.dispatch({ type: 'frame', currentFrame: this._dotLottieCore.currentFrame() }),
        this._render() &&
          this._dotLottieCore.isComplete() &&
          (this._dotLottieCore.config().loopAnimation
            ? this._eventManager.dispatch({ type: 'loop', loopCount: this._dotLottieCore.loopCount() })
            : this._eventManager.dispatch({ type: 'complete' }))),
        (this._animationFrameId = this._frameManager.requestAnimationFrame(this._draw.bind(this)));
    }
    play() {
      if (this._dotLottieCore === null) return;
      let n = this._dotLottieCore.play();
      (this._isFrozen = !1),
        n &&
          (this._eventManager.dispatch({ type: 'play' }),
          (this._animationFrameId = this._frameManager.requestAnimationFrame(this._draw.bind(this))));
    }
    pause() {
      if (this._dotLottieCore === null) return;
      this._dotLottieCore.pause() && this._eventManager.dispatch({ type: 'pause' });
    }
    stop() {
      if (this._dotLottieCore === null) return;
      this._dotLottieCore.stop() &&
        (this._eventManager.dispatch({ type: 'frame', currentFrame: this._dotLottieCore.currentFrame() }),
        this._render(),
        this._eventManager.dispatch({ type: 'stop' }));
    }
    setFrame(n) {
      if (this._dotLottieCore === null || n < 0 || n > this._dotLottieCore.totalFrames()) return;
      this._dotLottieCore.seek(n) &&
        (this._eventManager.dispatch({ type: 'frame', currentFrame: this._dotLottieCore.currentFrame() }),
        this._render());
    }
    setSpeed(n) {
      this._dotLottieCore !== null && this._dotLottieCore.setConfig({ ...this._dotLottieCore.config(), speed: n });
    }
    setBackgroundColor(n) {
      this._dotLottieCore !== null &&
        (te && this._canvas instanceof HTMLCanvasElement
          ? (this._canvas.style.backgroundColor = n)
          : this._dotLottieCore.setConfig({ ...this._dotLottieCore.config(), backgroundColor: Ot(n) }),
        (this._backgroundColor = n));
    }
    setLoop(n) {
      this._dotLottieCore !== null &&
        this._dotLottieCore.setConfig({ ...this._dotLottieCore.config(), loopAnimation: n });
    }
    setUseFrameInterpolation(n) {
      this._dotLottieCore !== null &&
        this._dotLottieCore.setConfig({ ...this._dotLottieCore.config(), useFrameInterpolation: n });
    }
    addEventListener(n, a) {
      this._eventManager.addEventListener(n, a);
    }
    removeEventListener(n, a) {
      this._eventManager.removeEventListener(n, a);
    }
    destroy() {
      this._dotLottieCore?.delete(),
        (this._dotLottieCore = null),
        (this._context = null),
        this._eventManager.dispatch({ type: 'destroy' }),
        this._eventManager.removeAllEventListeners(),
        this._cleanupStateMachineListeners();
    }
    freeze() {
      this._animationFrameId !== null &&
        (this._frameManager.cancelAnimationFrame(this._animationFrameId),
        (this._animationFrameId = null),
        (this._isFrozen = !0),
        this._eventManager.dispatch({ type: 'freeze' }));
    }
    unfreeze() {
      this._animationFrameId === null &&
        ((this._animationFrameId = this._frameManager.requestAnimationFrame(this._draw.bind(this))),
        (this._isFrozen = !1),
        this._eventManager.dispatch({ type: 'unfreeze' }));
    }
    resize() {
      if (te && this._canvas instanceof HTMLCanvasElement) {
        let a = this._renderConfig.devicePixelRatio || window.devicePixelRatio || 1,
          { height: d, width: w } = this._canvas.getBoundingClientRect();
        (this._canvas.width = w * a), (this._canvas.height = d * a);
      }
      this._dotLottieCore?.resize(this._canvas.width, this._canvas.height) && this._render();
    }
    setSegment(n, a) {
      this._dotLottieCore === null ||
        M._wasmModule === null ||
        this._dotLottieCore.setConfig({ ...this._dotLottieCore.config(), segment: tt([n, a], M._wasmModule) });
    }
    setMode(n) {
      this._dotLottieCore === null ||
        M._wasmModule === null ||
        this._dotLottieCore.setConfig({ ...this._dotLottieCore.config(), mode: Qe(n, M._wasmModule) });
    }
    setRenderConfig(n) {
      this._renderConfig = n;
    }
    loadAnimation(n) {
      if (this._dotLottieCore === null || this._dotLottieCore.activeAnimationId() === n) return;
      this._dotLottieCore.loadAnimation(n, this._canvas.width, this._canvas.height)
        ? (this._eventManager.dispatch({ type: 'load' }), this.resize())
        : this._eventManager.dispatch({ type: 'loadError', error: new Error(`Failed to animation :${n}`) });
    }
    setMarker(n) {
      this._dotLottieCore !== null && this._dotLottieCore.setConfig({ ...this._dotLottieCore.config(), marker: n });
    }
    markers() {
      let n = this._dotLottieCore?.markers();
      if (n) {
        let a = [];
        for (let d = 0; d < n.size(); d += 1) {
          let w = n.get(d);
          a.push({ name: w.name, time: w.time, duration: w.duration });
        }
        return a;
      }
      return [];
    }
    loadTheme(n) {
      if (this._dotLottieCore === null) return !1;
      let a = this._dotLottieCore.loadTheme(n);
      return this._render(), a;
    }
    loadThemeData(n) {
      if (this._dotLottieCore === null) return !1;
      let a = this._dotLottieCore.loadThemeData(n);
      return this._render(), a;
    }
    setLayout(n) {
      this._dotLottieCore === null ||
        M._wasmModule === null ||
        this._dotLottieCore.setConfig({
          ...this._dotLottieCore.config(),
          layout: { align: et(n.align, M._wasmModule), fit: qe(n.fit, M._wasmModule) },
        });
    }
    setViewport(n, a, d, w) {
      return this._dotLottieCore === null ? !1 : this._dotLottieCore.setViewport(n, a, d, w);
    }
    static setWasmUrl(n) {
      X.setWasmUrl(n);
    }
    loadStateMachine(n) {
      return this._dotLottieCore?.loadStateMachine(n) ?? !1;
    }
    startStateMachine() {
      let n = this._dotLottieCore?.startStateMachine() ?? !1;
      return n && this._setupStateMachineListeners(), n;
    }
    stopStateMachine() {
      let n = this._dotLottieCore?.stopStateMachine() ?? !1;
      return n && this._cleanupStateMachineListeners(), n;
    }
    _getPointerPosition(n) {
      let a = this._canvas.getBoundingClientRect(),
        d = this._canvas.width / a.width,
        w = this._canvas.height / a.height,
        $ = this._renderConfig.devicePixelRatio || window.devicePixelRatio || 1,
        U = ((n.clientX - a.left) * d) / $,
        Y = ((n.clientY - a.top) * w) / $;
      return { x: U, y: Y };
    }
    _onPointerUp(n) {
      let { x: a, y: d } = this._getPointerPosition(n);
      this.postStateMachineEvent(`OnPointerUp: ${a} ${d}`);
    }
    _onPointerDown(n) {
      let { x: a, y: d } = this._getPointerPosition(n);
      this.postStateMachineEvent(`OnPointerDown: ${a} ${d}`);
    }
    _onPointerMove(n) {
      let { x: a, y: d } = this._getPointerPosition(n);
      this.postStateMachineEvent(`OnPointerMove: ${a} ${d}`);
    }
    _onPointerEnter(n) {
      let { x: a, y: d } = this._getPointerPosition(n);
      this.postStateMachineEvent(`OnPointerEnter: ${a} ${d}`);
    }
    _onPointerLeave(n) {
      let { x: a, y: d } = this._getPointerPosition(n);
      this.postStateMachineEvent(`OnPointerExit: ${a} ${d}`);
    }
    _onComplete() {
      this.postStateMachineEvent('OnComplete');
    }
    postStateMachineEvent(n) {
      return this._dotLottieCore?.postEventPayload(n) ?? !1;
    }
    getStateMachineListeners() {
      if (!this._dotLottieCore) return [];
      let n = this._dotLottieCore.stateMachineFrameworkSetup(),
        a = [];
      for (let d = 0; d < n.size(); d += 1) a.push(n.get(d));
      return a;
    }
    _setupStateMachineListeners() {
      if (te && this._canvas instanceof HTMLCanvasElement && this._dotLottieCore !== null && this.isLoaded) {
        let n = this.getStateMachineListeners();
        n.includes('PointerUp') && this._canvas.addEventListener('pointerup', this._onPointerUp.bind(this)),
          n.includes('PointerDown') && this._canvas.addEventListener('pointerdown', this._onPointerDown.bind(this)),
          n.includes('PointerMove') && this._canvas.addEventListener('pointermove', this._onPointerMove.bind(this)),
          n.includes('PointerEnter') && this._canvas.addEventListener('pointerenter', this._onPointerEnter.bind(this)),
          n.includes('PointerExit') && this._canvas.addEventListener('pointerleave', this._onPointerLeave.bind(this)),
          n.includes('Complete') && this.addEventListener('complete', this._onComplete.bind(this));
      }
    }
    _cleanupStateMachineListeners() {
      te &&
        this._canvas instanceof HTMLCanvasElement &&
        (this._canvas.removeEventListener('pointerup', this._onPointerUp.bind(this)),
        this._canvas.removeEventListener('pointerdown', this._onPointerDown.bind(this)),
        this._canvas.removeEventListener('pointermove', this._onPointerMove.bind(this)),
        this._canvas.removeEventListener('pointerenter', this._onPointerEnter.bind(this)),
        this._canvas.removeEventListener('pointerleave', this._onPointerLeave.bind(this)),
        this.removeEventListener('complete', this._onComplete.bind(this)));
    }
    loadStateMachineData(n) {
      return this._dotLottieCore?.loadStateMachineData(n) ?? !1;
    }
    animationSize() {
      let n = this._dotLottieCore?.animationSize().get(0) ?? 0,
        a = this._dotLottieCore?.animationSize().get(1) ?? 0;
      return { width: n, height: a };
    }
    setStateMachineBooleanContext(n, a) {
      return this._dotLottieCore?.setStateMachineBooleanContext(n, a) ?? !1;
    }
    setStateMachineNumericContext(n, a) {
      return this._dotLottieCore?.setStateMachineNumericContext(n, a) ?? !1;
    }
    setStateMachineStringContext(n, a) {
      return this._dotLottieCore?.setStateMachineStringContext(n, a) ?? !1;
    }
  };
I(M, '_wasmModule', null);
var fe = M;
var E = new Map(),
  Dn = {
    ready: (s) => (n) => {
      let a = { id: '', method: 'onReady', result: { instanceId: s, event: n } };
      self.postMessage(a);
    },
    complete: (s) => (n) => {
      let a = { id: '', method: 'onComplete', result: { instanceId: s, event: n } };
      self.postMessage(a);
    },
    load: (s) => (n) => {
      let d = { id: '', method: 'onLoad', result: { instanceId: s, event: n } };
      self.postMessage(d);
    },
    loadError: (s) => (n) => {
      let d = { id: '', method: 'onLoadError', result: { instanceId: s, event: n } };
      self.postMessage(d);
    },
    loop: (s) => (n) => {
      let d = { id: '', method: 'onLoop', result: { instanceId: s, event: n } };
      self.postMessage(d);
    },
    play: (s) => (n) => {
      let d = { id: '', method: 'onPlay', result: { instanceId: s, event: n } };
      self.postMessage(d);
    },
    pause: (s) => (n) => {
      let d = { id: '', method: 'onPause', result: { instanceId: s, event: n } };
      self.postMessage(d);
    },
    stop: (s) => (n) => {
      let d = { id: '', method: 'onStop', result: { instanceId: s, event: n } };
      self.postMessage(d);
    },
    frame: (s) => (n) => {
      let d = { id: '', method: 'onFrame', result: { instanceId: s, event: n } };
      self.postMessage(d);
    },
    render: (s) => (n) => {
      let d = { id: '', method: 'onRender', result: { instanceId: s, event: n } };
      self.postMessage(d);
    },
    freeze: (s) => (n) => {
      let d = { id: '', method: 'onFreeze', result: { instanceId: s, event: n } };
      self.postMessage(d);
    },
    unfreeze: (s) => (n) => {
      let d = { id: '', method: 'onUnfreeze', result: { instanceId: s, event: n } };
      self.postMessage(d);
    },
    destroy: (s) => (n) => {
      let d = { id: '', method: 'onDestroy', result: { instanceId: s, event: n } };
      self.postMessage(d);
    },
  },
  Bt = {
    getDotLottieInstanceState(s) {
      let n = s.params.instanceId,
        a = E.get(n);
      if (!a) throw new Error(`Instance with id ${n} does not exist.`);
      return {
        state: {
          isLoaded: a.isLoaded,
          isPaused: a.isPaused,
          isPlaying: a.isPlaying,
          isStopped: a.isStopped,
          isFrozen: a.isFrozen,
          loop: a.loop,
          mode: a.mode,
          speed: a.speed,
          currentFrame: a.currentFrame,
          totalFrames: a.totalFrames,
          duration: a.duration,
          useFrameInterpolation: a.useFrameInterpolation,
          renderConfig: a.renderConfig,
          marker: a.marker,
          backgroundColor: a.backgroundColor,
          markers: a.markers(),
          activeAnimationId: a.activeAnimationId,
          activeThemeId: a.activeThemeId,
          autoplay: a.autoplay,
          segment: a.segment,
          layout: a.layout,
          segmentDuration: a.segmentDuration,
          isReady: a.isReady,
          manifest: a.manifest,
        },
      };
    },
    setLayout(s) {
      let n = s.params.instanceId,
        a = s.params.layout,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      return d.setLayout(a), { success: !0 };
    },
    getStateMachineListeners(s) {
      let n = s.params.instanceId,
        a = E.get(n);
      if (!a) throw new Error(`Instance with id ${n} does not exist.`);
      return a.getStateMachineListeners();
    },
    postStateMachineEvent(s) {
      let n = s.params.instanceId,
        a = s.params.event,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      return d.postStateMachineEvent(a);
    },
    startStateMachine(s) {
      let n = s.params.instanceId,
        a = E.get(n);
      if (!a) throw new Error(`Instance with id ${n} does not exist.`);
      return a.startStateMachine();
    },
    stopStateMachine(s) {
      let n = s.params.instanceId,
        a = E.get(n);
      if (!a) throw new Error(`Instance with id ${n} does not exist.`);
      return a.stopStateMachine();
    },
    loadStateMachine(s) {
      let n = s.params.instanceId,
        a = s.params.stateMachineId,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      return d.loadStateMachine(a);
    },
    loadStateMachineData(s) {
      let n = s.params.instanceId,
        a = s.params.stateMachineData,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      return d.loadStateMachineData(a);
    },
    create: (s) => {
      let n = s.params.instanceId,
        a = s.params.config,
        d = s.params.width,
        w = s.params.height;
      if (E.has(n)) throw new Error(`Instance with id ${n} already exists.`);
      let $ = new fe(a);
      return (
        ($.canvas.height = w),
        ($.canvas.width = d),
        E.set(n, $),
        [
          'complete',
          'frame',
          'load',
          'loadError',
          'loop',
          'pause',
          'play',
          'stop',
          'destroy',
          'freeze',
          'unfreeze',
          'render',
          'ready',
        ].forEach((Y) => {
          $.addEventListener(Y, Dn[Y](n));
        }),
        { instanceId: n }
      );
    },
    destroy: (s) => {
      let n = s.params.instanceId,
        a = E.get(n);
      a && (a.destroy(), E.delete(n));
    },
    freeze: (s) => {
      let n = s.params.instanceId,
        a = E.get(n);
      if (!a) throw new Error(`Instance with id ${n} does not exist.`);
      a.freeze();
    },
    load: (s) => {
      let n = s.params.instanceId,
        a = s.params.config,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      d.load(a);
    },
    loadAnimation: (s) => {
      let n = s.params.instanceId,
        a = s.params.animationId,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      d.loadAnimation(a);
    },
    loadTheme: (s) => {
      let n = s.params.instanceId,
        a = s.params.themeId,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      return d.loadTheme(a);
    },
    loadThemeData: (s) => {
      let n = s.params.instanceId,
        a = s.params.themeData,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      return d.loadThemeData(a);
    },
    pause: (s) => {
      let n = s.params.instanceId,
        a = E.get(n);
      if (!a) throw new Error(`Instance with id ${n} does not exist.`);
      return a.pause();
    },
    play: (s) => {
      let n = s.params.instanceId,
        a = E.get(n);
      if (!a) throw new Error(`Instance with id ${n} does not exist.`);
      return a.play();
    },
    resize: (s) => {
      let n = s.params.instanceId,
        a = s.params.width,
        d = s.params.height,
        w = E.get(n);
      if (!w) throw new Error(`Instance with id ${n} does not exist.`);
      return (w.canvas.height = d), (w.canvas.width = a), w.resize(), { success: !0 };
    },
    setBackgroundColor: (s) => {
      let n = s.params.instanceId,
        a = s.params.backgroundColor,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      d.setBackgroundColor(a);
    },
    setFrame: (s) => {
      let n = s.params.instanceId,
        a = s.params.frame,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      d.setFrame(a);
    },
    setMode: (s) => {
      let n = s.params.instanceId,
        a = s.params.mode,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      d.setMode(a);
    },
    setRenderConfig: (s) => {
      let n = s.params.instanceId,
        a = s.params.renderConfig,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      d.setRenderConfig(a);
    },
    setSegment: (s) => {
      let n = s.params.instanceId,
        a = s.params.segment,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      d.setSegment(a[0], a[1]);
    },
    setSpeed: (s) => {
      let n = s.params.instanceId,
        a = s.params.speed,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      d.setSpeed(a);
    },
    setUseFrameInterpolation: (s) => {
      let n = s.params.instanceId,
        a = s.params.useFrameInterpolation,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      d.setUseFrameInterpolation(a);
    },
    setWasmUrl: (s) => {
      fe.setWasmUrl(s.params.url);
    },
    stop: (s) => {
      let n = s.params.instanceId,
        a = E.get(n);
      if (!a) throw new Error(`Instance with id ${n} does not exist.`);
      a.stop();
    },
    unfreeze: (s) => {
      let n = s.params.instanceId,
        a = E.get(n);
      if (!a) throw new Error(`Instance with id ${n} does not exist.`);
      a.unfreeze();
    },
    setViewport(s) {
      let n = s.params.instanceId,
        a = s.params.x,
        d = s.params.y,
        w = s.params.width,
        $ = s.params.height,
        U = E.get(n);
      if (!U) throw new Error(`Instance with id ${n} does not exist.`);
      return U.setViewport(a, d, w, $);
    },
    setMarker(s) {
      let n = s.params.instanceId,
        a = s.params.marker,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      return d.setMarker(a), { success: !0 };
    },
    setLoop(s) {
      let n = s.params.instanceId,
        a = s.params.loop,
        d = E.get(n);
      if (!d) throw new Error(`Instance with id ${n} does not exist.`);
      return d.setLoop(a), { success: !0 };
    },
  };
function zn(s) {
  let n = s.method;
  if (typeof Bt[n] == 'function') return Bt[n](s);
  throw new Error(`Method ${n} is not implemented in commands.`);
}
self.onmessage = (s) => {
  try {
    let n = zn(s.data),
      a = { id: s.data.id, method: s.data.method, result: n };
    self.postMessage(a);
  } catch (n) {
    let a = { id: s.data.id, method: s.data.method, error: n.message };
    self.postMessage(a);
  }
};
var On = '',
  cr = On;

export { cr as default };
